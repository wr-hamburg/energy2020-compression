From 7999923c0bbf3b0fc5c750d69981fb5f29ecc1ad Mon Sep 17 00:00:00 2001
From: Julian Kunkel <juliankunkel@googlemail.com>
Date: Tue, 17 Oct 2017 14:57:41 +0200
Subject: [PATCH] Patch for NetCDF with SCIL

---
 include/nc4internal.h | 26 ++++++++--------
 include/ncdispatch.h  |  1 +
 include/netcdf.h      |  4 +++
 libdispatch/dvar.c    | 83 ++++++++++++++++++++++++++++-----------------------
 libsrc4/nc4hdf.c      |  7 +++++
 libsrc4/nc4var.c      | 49 ++++++++++++++++++++++++++++++
 libsrcp/ncpdispatch.c |  6 ++++
 7 files changed, 126 insertions(+), 50 deletions(-)

diff --git a/include/nc4internal.h b/include/nc4internal.h
index 0726ea8..2d963dc 100644
--- a/include/nc4internal.h
+++ b/include/nc4internal.h
@@ -171,6 +171,7 @@ typedef struct NC_VAR_INFO
    nc_bool_t shuffle;           /* True if var has shuffle filter applied */
    nc_bool_t fletcher32;        /* True if var has fletcher32 filter applied */
    nc_bool_t szip;              /* True if var has szip filter applied */
+   void * compress_scil;        /* scil_compression */
    int options_mask;
    int pixels_per_block;
    size_t chunk_cache_size, chunk_cache_nelems;
diff --git a/include/ncdispatch.h b/include/ncdispatch.h
index 0cacd0f..360c102 100644
--- a/include/ncdispatch.h
+++ b/include/ncdispatch.h
@@ -291,6 +291,7 @@ int (*inq_enum_ident)(int, nc_type, long long, char*);
 int (*def_opaque)(int, size_t, const char*, nc_type*);
 int (*def_var_deflate)(int, int, int, int, int);
 int (*def_var_fletcher32)(int, int, int);
+int (*def_var_scil)(int, int, void*);
 int (*def_var_chunking)(int, int, int, const size_t*);
 int (*def_var_fill)(int, int, int, const void*);
 int (*def_var_endian)(int, int, int);
diff --git a/include/netcdf.h b/include/netcdf.h
index 67b2d95..e036f12 100644
--- a/include/netcdf.h
+++ b/include/netcdf.h
@@ -841,6 +841,10 @@ nc_inq_var_szip(int ncid, int varid, int *options_maskp, int *pixels_per_blockp)
 EXTERNL int
 nc_def_var_fletcher32(int ncid, int varid, int fletcher32);

+/* Set scil hints */
+EXTERNL int
+nc_def_var_scil(int ncid, int varid, void * scil_hints);
+
 /* Inquire about fletcher32 checksum for a var. */
 EXTERNL int
 nc_inq_var_fletcher32(int ncid, int varid, int *fletcher32p);
diff --git a/libdispatch/dvar.c b/libdispatch/dvar.c
index a273a03..0b68f3d 100644
--- a/libdispatch/dvar.c
+++ b/libdispatch/dvar.c
@@ -631,13 +631,22 @@ nc_def_var_fletcher32(int ncid, int varid, int fletcher32)
 }

 int
-nc_def_var_chunking(int ncid, int varid, int storage,
+nc_def_var_scil(int ncid, int varid, void * scil_hints)
+{
+    NC* ncp;
+    int stat = NC_check_id(ncid,&ncp);
+    if(stat != NC_NOERR) return stat;
+    return ncp->dispatch->def_var_scil(ncid, varid, scil_hints);
+}
+
+int
+nc_def_var_chunking(int ncid, int varid, int storage,
 		    const size_t *chunksizesp)
 {
     NC* ncp;
     int stat = NC_check_id(ncid, &ncp);
     if(stat != NC_NOERR) return stat;
-    return ncp->dispatch->def_var_chunking(ncid, varid, storage,
+    return ncp->dispatch->def_var_chunking(ncid, varid, storage,
 					   chunksizesp);
 }

diff --git a/libsrc4/nc4hdf.c b/libsrc4/nc4hdf.c
index f90401a..4c6f350 100644
--- a/libsrc4/nc4hdf.c
+++ b/libsrc4/nc4hdf.c
@@ -18,6 +18,7 @@
 #include "nc4dispatch.h"
 #include <H5DSpublic.h>
 #include <math.h>
+#include <scil-hdf5-plugin.h>

 #ifdef USE_PARALLEL
 #include "netcdf_par.h"
@@ -1538,6 +1541,10 @@ var_create_dataset(NC_GRP_INFO_T *grp, NC_VAR_INFO_T *var, nc_bool_t write_dimid
     if (H5Pset_deflate(plistid, var->deflate_level) < 0)
       BAIL(NC_EHDFERR);

+  if(var->compress_scil)
+    if (H5Pset_scil_user_hints_t(plistid, var->compress_scil) < 0)
+      BAIL(NC_EHDFERR);
+
   /* Szip? NO! We don't want anyone to produce szipped netCDF files! */
   /* #ifdef USE_SZIP */
   /*    if (var->options_mask) */
diff --git a/libsrc4/nc4var.c b/libsrc4/nc4var.c
index ac216b9..3b4148d 100644
--- a/libsrc4/nc4var.c
+++ b/libsrc4/nc4var.c
@@ -1012,6 +1012,55 @@ NC4_def_var_fletcher32(int ncid, int varid, int fletcher32)
                            NULL, NULL, NULL, NULL, NULL);
 }

+int
+NC4_def_var_scil(int ncid, int varid, void * scil_hints)
+{
+  NC *nc;
+  NC_GRP_INFO_T *grp;
+  NC_HDF5_FILE_INFO_T *h5;
+  NC_VAR_INFO_T *var;
+  NC_DIM_INFO_T *dim;
+  int d;
+  int retval;
+  nc_bool_t ishdf4 = NC_FALSE; /* Use this to avoid so many ifdefs */
+
+  LOG((2, "%s: ncid 0x%x varid %d", __func__, ncid, varid));
+
+  /* Find info for this file and group, and set pointer to each. */
+  if ((retval = nc4_find_nc_grp_h5(ncid, &nc, &grp, &h5)))
+     return retval;
+
+  #ifdef USE_HDF4
+  ishdf4 = h5->hdf4;
+  #endif
+
+  /* Attempting to do any of these things on a netCDF-3 file produces
+   * an error. */
+  if (!h5)
+     return NC_ENOTNC4;
+
+  assert(nc && grp && h5);
+
+  /* Find the var. */
+  for (var = grp->var; var; var = var->l.next)
+     if (var->varid == varid)
+        break;
+
+  /* Oh no! Maybe we couldn't find it (*sob*)! */
+  if (!var)
+     return NC_ENOTVAR;
+
+  /* If the HDF5 dataset has already been created, then it is too
+   * late to set all the extra stuff. */
+  if (var->created)
+     return NC_ELATEDEF;
+
+  var->compress_scil = scil_hints;
+  var->contiguous = NC_FALSE;
+
+  return NC_NOERR;
+}
+
 /* Define chunking stuff for a var. This must be done after nc_def_var
    and before nc_enddef.

diff --git a/libsrcp/ncpdispatch.c b/libsrcp/ncpdispatch.c
index a4e8c3e..16a6b01 100644
--- a/libsrcp/ncpdispatch.c
+++ b/libsrcp/ncpdispatch.c
@@ -1474,6 +1474,12 @@ NCP_def_var_fletcher32(int ncid, int varid, int fletcher32)
 }

 static int
+NCP_def_var_scil(int ncid, int varid, void * scil_hints)
+{
+    return NC_ENOTNC4;
+}
+
+static int
 NCP_def_var_chunking(int ncid, int varid, int contiguous, const size_t *chunksizesp)
 {
     return NC_ENOTNC4;
--
2.7.4
